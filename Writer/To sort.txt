To sort some shape refers (horizontally):
  If the shape refers' first is the shape refers' last, exit.
  Split the shape refers into some left shape refers and some right shape refers.
  Sort the left shape refers (horizontally).
  Sort the right shape refers (horizontally).
  Loop.
    Put the left shape refers' first into an left shape refer.
    Put the right shape refers' first into an right shape refer.
    If the left shape refer is nil, append the right shape refers to the shape refers; exit.
    If the right shape refer is nil, append the left shape refers to the shape refers; exit.
    If the left shape refer's shape's left is greater than the right shape refer's shape's left, move the right shape refer from the right shape refers to the shape refers; repeat.
    Move the left shape refer from the left shape refers to the shape refers.
  Repeat.
  
  
To sort some shape refers (vertically):
  If the shape refers' first is the shape refers' last, exit.
  Split the shape refers into some left shape refers and some right shape refers.
  Sort the left shape refers (vertically).
  Sort the right shape refers (vertically).
  Loop.
    Put the left shape refers' first into an left shape refer.
    Put the right shape refers' first into an right shape refer.
    If the left shape refer is nil, append the right shape refers to the shape refers; exit.
    If the right shape refer is nil, append the left shape refers to the shape refers; exit.
    If the left shape refer's shape's top is greater than the right shape refer's shape's top, move the right shape refer from the right shape refers to the shape refers; repeat.
    Move the left shape refer from the left shape refers to the shape refers.
  Repeat.
  
  
