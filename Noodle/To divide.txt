To divide an fraction by an number:
  Multiply the fraction's denominator by the number.
  Reduce the fraction.
  
  
To divide an fraction by another fraction:
  Privatize the other fraction.
  Flip the other fraction.
  Multiply the fraction by the other fraction.
  
  
To divide an number by an fraction:
  Privatize the fraction.
  Flip the fraction.
  Multiply the number by the fraction.
  
  
To divide an pair by an number and another number:
  Divide the pair's x by the number.
  Divide the pair's y by the other number.
  
  
To divide an pair by an number:
  Divide the pair's x by the number.
  Divide the pair's y by the number.
  
  
To divide an pair by another pair:
  Divide the pair's x by the other pair's x.
  Divide the pair's y by the other pair's y.
  
  
To divide an pointer by an number giving an quotient and an remainder;
To divide an number by another number giving an quotient and an remainder:
  If the other number is 0, put the largest number into the number; put 0 into the remainder; exit.
  Intel $8B8508000000. \ mov eax,[ebp+8] \ the number
  Intel $8B9D0C000000. \ mov ebx,[ebp+12] \ the other number
  Intel $8B00. \ mov eax,[eax]
  Intel $99. \ cdq
  Intel $F73B. \ idiv [ebx] \ means idiv eax,[ebx] but is weird form
  Intel $8B9D10000000. \ mov ebx,[ebp+16] \ the quotient
  Intel $8903. \ mov [ebx],eax
  Intel $8B9D14000000. \ mov ebx,[ebp+20] \ the remainder
  Intel $8913. \ mov [ebx],edx
  
  
To divide an pointer by an number;
To divide an number by another number:
  If the other number is 0, put the largest number into the number; exit.
  Intel $8B8508000000. \ mov eax,[ebp+8] \ the number
  Intel $8B9D0C000000. \ mov ebx,[ebp+12] \ the other number
  Intel $8B00. \ mov eax,[eax]
  Intel $99. \ cdq
  Intel $F73B. \ div [ebx] \ means div eax,[ebx] but is weird form
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the number
  Intel $8903. \ mov [ebx],eax
  
  
