To bitwise and an byte with an number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $2003. \ and [ebx],al
  
  
To bitwise and an byte with another byte:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other byte
  Intel $8A00. \ mov al,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $2003. \ and [ebx],al
  
  
To bitwise and an number with another number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the number
  Intel $2103. \ and [ebx],eax
  
  
To bitwise or an byte with an number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $0803. \ or [ebx],al
  
  
To bitwise or an byte with another byte:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other byte
  Intel $8A00. \ mov al,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $0803. \ or [ebx],al
  
  
To bitwise or an number with another number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the number
  Intel $0903. \ or [ebx],eax
  
  
To bitwise xor an byte with an number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $3003. \ or [ebx],al
  
  
To bitwise xor an byte with another byte:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other byte
  Intel $8A00. \ mov al,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the byte
  Intel $3003. \ xor [ebx],al
  
  
To bitwise xor an number with another number:
  Intel $8B850C000000. \ mov eax,[ebp+12] \ the other number
  Intel $8B00. \ mov eax,[eax]
  Intel $8B9D08000000. \ mov ebx,[ebp+8] \ the number
  Intel $3103. \ xor [ebx],eax
  
  
