To decide if an byte is any glom byte:
  If the byte is any letter, say yes.
  If the byte is any digit, say yes.
  If the byte is the tilde byte, say yes.
  If the byte is the at-sign byte, say yes.
  If the byte is the number-sign byte, say yes.
  If the byte is the percent-sign byte, say yes.
  If the byte is the ampersand byte, say yes.
  If the byte is the underscore byte, say yes.
  If the byte is the single-quote byte, say yes.
  If the byte is the dash byte, say yes.
  If the byte is the cross byte, say yes.
  If the byte is the slash byte, say yes.
  Say no.
  
  
To decide if an byte is any mark:
  If the byte is the period byte, say yes.
  If the byte is the comma byte, say yes.
  If the byte is the semi-colon byte, say yes.
  If the byte is the colon byte, say yes.
  If the byte is the exclamation  byte, say yes.
  If the byte is the question-mark byte, say yes.
  Say no.
  
  
To decide if an byte is any symbol:
  If the byte is the caret byte, say yes.
  If the byte is the bar byte, say yes.
  If the byte is the asterisk byte, say yes.
  If the byte is the cross byte, say yes.
  If the byte is the dash byte, say yes.
  If the byte is the slash byte, say yes.
  If the byte is the left-alligator byte, say yes.
  If the byte is the right-alligator byte, say yes.
  If the byte is the left-brace byte, say yes.
  If the byte is the right-brace byte, say yes.
  If the byte is the equal-sign byte, say yes.
  If the byte is 128, say yes.
  If the byte is 130, say yes.
  If the byte is between 132 and 137, say yes.
  If the byte is 139, say yes.
  If the byte is between 145 and 153, say yes.
  If the byte is 155, say yes.
  If the byte is between 161 and 180, say yes.
  If the byte is between 183 and 191, say yes.
  If the byte is 215, say yes.
  If the byte is 247, say yes.
  Say no.
  
  
To decide if an field term is empty:
  If the field term's field is not nil, say no.
  If the field term's function is not nil, say no.
  Say yes.
  
  
To decide if an moniker is in an index:
  Find an refer given the moniker and the index.
  If the refer is nil, say no.
  If the refer's pointer is nil, say no.
  Say yes.
  
  
To decide if an monikette is bubbled out:
  If the monikette is nil, say yes.
  If the monikette's current type is not nil, say no.
  If the monikette's current substring is not blank, say no.
  Say yes.
  
  
To decide if an name is any valid field name:
  If the name is "magnitude", say no.
  If the name is "target", say no.
  If the name is "whereabouts", say no.
  Say yes.
  
  
To decide if an rider is followed by any unit of measure:
  Privatize the rider.
  Move the rider (compiler rules).
  If the rider's token is not any name starter, say no.
  Scan an name given the rider.
  Find an type given the name and the type index.
  If the type is nil, say no.
  If the name is not "times", say yes. \ special because times is an infix operator and an unit of measure
  If the rider's token is the start of any expression, say no.
  Say yes.
  
  
To decide if an rider is on any nested double-quote:
  If the rider's source starts with """""", say yes.
  Say no.
  
  
To decide if an rider is on any possessive (type 1 - single-quote, s, non-glom-byte):
  If the rider's source does not start with "'s", say no.
  Privatize the rider.
  Add 2 to the rider's source's first.
  If the rider's source is blank, say yes.
  If the rider's source's first's target is not any glom byte, say yes.
  Say no.
  
  
To decide if an rider is on any possessive (type 2 - preceding s, single-quote, non-glom-byte):
  Privatize the rider.
  If the rider's source's first is the rider's original's first, say no.
  Subtract 1 from the rider's source's first.
  If the rider's source's first's target is not the little-s byte or the big-s byte, say no.
  Add 2 to the rider's source's first.
  If the rider's source is blank, say yes.
  If the rider's source's first's target is not any glom byte, say yes.
  Say no.
  
  
To decide if an rider is on any possessive:
  If the rider's source is blank, say no.
  If the rider's source's first's target is not the single-quote byte, say no.
  If the rider is on any possessive (type 1 - single-quote, s, non-glom-byte), say yes.
  If the rider is on any possessive (type 2 - preceding s, single-quote, non-glom-byte), say yes.
  Say no.
  
  
To decide if an rider is on any simile: \ added for invisible turtle project ***
  Privatize the rider.
  If the rider's token is "LIKE", say yes.
  If the rider's token is not "AS", say no.
  Move the rider (compiler rules).
  If the rider's token is any indefinite article, say no.
  Say yes.
  
  
To decide if an rider is the start of any function:
  If the compiler's abort flag is set, say no.
  If the rider's token is not "put", say no.
  Privatize the rider.
  Move the rider (compiler rules).
  If the rider's token is not any article, say no.
  Move the rider (compiler rules).
  Scan an name given the rider.
  If the rider's token is any possessive, say yes.  
  
  
To decide if an string ends with any consonant and another string:
  Slap an substring on the string.
  Subtract the other string's length from the substring's last.
  If the substring is blank, say no.
  If the substring's last's target is not any consonant, say no.
  If the string does not end with the other string, say no.
  Say yes.
  
  
To decide if an string ends with any vowel and another string:
  Slap an substring on the string.
  Subtract the other string's length from the substring's last.
  If the substring is blank, say no.
  If the substring's last's target is not any vowel, say no.
  If the string does not end with the other string, say no.
  Say yes.
  
  
To decide if an string is any article:
  If the string is any indefinite article, say yes.
  If the string is "the", say yes.
  Say no.
  
  
To decide if an string is any conjunction:
  If the string is "and", say yes.
  If the string is "both", say yes.
  If the string is "but", say yes.
  If the string is "either", say yes.
  If the string is "neither", say yes.
  If the string is "nor", say yes.
  If the string is "or", say yes.
  Say no.
  
  
To decide if an string is any flag literal:
  If the string is "yes", say yes.
  If the string is "no", say yes.
  Say no.
  
  
To decide if an string is any hex literal:
  If the string is blank, say no.
  If the string's first's target is the dollar-sign byte, say yes.
  Say no.
  
  
To decide if an string is any indefinite article:
  If the string is "an", say yes.
  If the string is "an", say yes.
  If the string is "another", say yes.
  If the string is "some", say yes.
  Say no.
  
  
To decide if an string is any literal:
  If the string is any pointer literal, say yes.
  If the string is any numeric literal, say yes.
  If the string is any string literal, say yes.
  If the string is any flag literal, say yes.
  If the string is any hex literal, say yes.
  Say no.
  
  
To decide if an string is any mark:
  If the string's length is not 1, say no.
  If the string's first's target is any mark, say yes.
  Say no.
  
  
To decide if an string is any monikette string:
  If the string is blank, say no.
  If the string is "the", say no.
  If the string is any indefinite article, say no.
  If the string is any possessive, say no.
  If the string is any literal, say no.
  If the string is any mark, say no.
  If the string is any symbol, say no.
  Say yes.
  
  
To decide if an string is any name ender: \ compare with name starter
  If the string is any mark, say yes.
  If the string is any symbol, say yes.
  If the string is any article, say yes.
  If the string is any conjunction, say yes.
  If the string is any possessive, say yes.
  If the string is any verb, say yes.
  If the string is any operator, say yes.
  If the string is any preposition, say yes.
  If the string is any qualifier, say yes.
  If the string is any literal, say yes.
  If the string is "called", say yes.
  If the string is "equal", say yes.
  If the string is blank, say yes.
  Say no.
  
  
To decide if an string is any name starter: \ compare with name ender
  If the string is any mark, say no.
  If the string is any symbol, say no.
  If the string is any article, say no.
  If the string is any conjunction, say yes.
  If the string is any possessive, say no.
  If the string is any verb, say yes.
  If the string is any operator, say yes.
  If the string is any preposition, say yes.
  If the string is any qualifier, say no.
  If the string is any literal, say no.
  If the string is "called", say yes.
  If the string is "equal", say yes.
  If the string is blank, say no.
  Say yes.
  
  
To decide if an string is any negative word:
  If the string is "not", say yes.
  If the string is "cannot", say yes.
  If the string is "nothing", say yes.
  If the string ends with "n't", say yes.
  Say no.
  
  
To decide if an string is any operator:
  If the string is "plus", say yes.
  If the string is "minus", say yes.
  If the string is "times", say yes.
  If the string is "divided", say yes.
  If the string is "then", say yes.
  Say no.
  
  
To decide if an string is any pause:
  If the string is ",", say yes.
  If the string is ";", say yes.
  If the string is "and", say yes.
  If the string is "or", say yes.
  Say no.
  
  
To decide if an string is any pointer literal:
  If the string is "nil", say yes.
  Say no.
  
  
To decide if an string is any possessive:
  If the string is "'s", say yes.
  If the string is "'", say yes.
  Say no.
  
  
To decide if an string is any preposition:
  If the string is "about", say yes.
  If the string is "above", say yes.
  If the string is "across", say yes.
  If the string is "after", say yes.
  If the string is "against", say yes.
  If the string is "all", say yes.
  If the string is "alone", say yes.
  If the string is "along", say yes.
  If the string is "among", say yes.
  If the string is "any", say yes.
  If the string is "anywhere", say yes.
  If the string is "around", say yes.
  If the string is "as", say yes.
  If the string is "at", say yes.
  If the string is "away", say yes.
  If the string is "back", say yes.
  If the string is "backward", say yes.
  If the string is "backwards", say yes.
  If the string is "before", say yes.
  If the string is "beginning", say yes.
  If the string is "behind", say yes.
  If the string is "below", say yes.
  If the string is "beneath", say yes.
  If the string is "beside", say yes.
  If the string is "between", say yes.
  If the string is "beyond", say yes.
  If the string is "bigger", say yes.
  If the string is "by", say yes.
  If the string is "close", say yes.
  If the string is "deep", say yes.
  If the string is "diagonally", say yes.
  If the string is "down", say yes.
  If the string is "downward", say yes.
  If the string is "ending", say yes.
  If the string is "everywhere", say yes.
  If the string is "except", say yes.
  If the string is "finishing", say yes.
  If the string is "facing", say yes.
  If the string is "for", say yes.
  If the string is "forward", say yes.
  If the string is "from", say yes.
  If the string is "given", say yes.
  If the string is "giving", say yes.
  If the string is "high", say yes.
  If the string is "in", say yes.
  If the string is "inside", say yes.
  If the string is "into", say yes.
  If the string is "larger", say yes.
  If the string is "leaning", say yes.
  If the string is "left", say yes.
  If the string is "leftward", say yes.
  If the string is "leftways", say yes.
  If the string is "like", say yes.
  If the string is "limiting", say yes.
  If the string is "long", say yes.
  If the string is "near", say yes.
  If the string is "of", say yes.
  If the string is "off", say yes.
  If the string is "on", say yes.
  If the string is "only", say yes.
  If the string is "onto", say yes.
  If the string is "out", say yes.
  If the string is "outside", say yes.
  If the string is "over", say yes.
  If the string is "past", say yes.
  If the string is "pointing", say yes.
  If the string is "returning", say yes.
  If the string is "right", say yes.
  If the string is "rightward", say yes.
  If the string is "rightways", say yes.
  If the string is "shorter", say yes.
  If the string is "sideway", say yes.
  If the string is "sideways", say yes.
  If the string is "similar", say yes.
  If the string is "smaller", say yes.
  If the string is "somewhere", say yes.
  If the string is "slantwise", say yes.
  If the string is "slantway", say yes.
  If the string is "slantways", say yes.
  If the string is "starting", say yes.
  If the string is "tall", say yes.
  If the string is "taller", say yes.
  If the string is "thru", say yes.
  If the string is "through", say yes.
  If the string is "throughout", say yes.
  If the string is "to", say yes.
  If the string is "toward", say yes.
  If the string is "towards", say yes.
  If the string is "under", say yes.
  If the string is "underneath", say yes.
  If the string is "until", say yes.
  If the string is "unto", say yes.
  If the string is "up", say yes.
  If the string is "upward", say yes.
  If the string is "upon", say yes.
  If the string is "using", say yes.
  If the string is "via", say yes.
  If the string is "while", say yes.
  If the string is "wide", say yes.
  If the string is "with", say yes.
  If the string is "within", say yes.
  If the string is "without", say yes.
  Say no.
  
  
To decide if an string is any qualifier:
  If the string is blank, say no.
  If the string's first's target is the left-paren byte, say yes.
  Say no.
  
  
To decide if an string is any string literal:
  If the string is blank, say no.
  If the string's first's target is the double-quote byte, say yes.
  Say no.
  
  
To decide if an string is any symbol:
  If the string's length is not 1, say no.
  If the string's first's target is any symbol, say yes.
  Say no.
  
  
To decide if an string is any verb:
  If the string is "are", say yes. \ are not \ aren't
  If the string is "be", say yes. \
  If the string is "can", say yes. \ cannot \ can't
  If the string is "cannot", say yes. 
  If the string is "could", say yes. \ could not \ couldn't
  If the string is "do", say yes. \ do not \ don't
  If the string is "does", say yes. \ does not \ doesn't
  If the string is "is", say yes. \ is not \ isn't
  If the string is "may", say yes. \ may not \ mayn't
  If the string is "should", say yes. \ should not \ shouldn't
  If the string is "was", say yes. \ was not \ wasn't
  If the string is "will", say yes. \ will not \ won't
  If the string is "would", say yes. \ would not \ wouldn't
  If the string is "has", say yes. \ used in type definitions
  If the string is "have", say yes. \ used in type definitions
  If the string ends with "n't", say yes.
  \ trouble makers
  If the string is "begins", say yes. \ does not begin \ doesn't begin
  If the string is "ends", say yes. \ does not end \ doesn't end
  If the string is "looks", say yes. \ does not look \ doesn't look
  If the string is "needs", say yes. \ does not need \ doesn't need
  If the string is "starts", say yes. \ does not start \ doesn't start
  Say no.
  
  
To decide if an string is the start of any definition:
  If the string is "to", say yes.
  If the string is "an", say yes.
  If the string is "an", say yes.
  If the string is "the", say yes.
  If the string is "some", say yes.
  Say no.
  
  
To decide if an string is the start of any expression:
  If the string is any sign, say yes.
  If the string is any indefinite article, say yes.
  If the string is "the", say yes.
  If the string is any literal, say yes.
  Say no.
  
  
To decide if an string is the start of any global:
  If the string is "the", say yes.
  Say no.
  
  
To decide if an string is the start of any new local:
  If the string is any indefinite article, say yes.
  Say no.
  
  
To decide if an string is the start of any optional info:
  If the string is "to", say yes.
  If the string is "with", say yes.
  Say no.
  
  
To decide if an string is the start of any routine:
  If the string is "to", say yes.
  Say no.
  
  
To decide if an string is the start of any statement:
  If the string is the start of any definition, say no.
  If the string is any literal, say no.
  If the string is any mark, say no.
  If the string is blank, say no.
  Say yes.
  
  
To decide if an string is the start of any type:
  If the string is "an", say yes.
  If the string is "an", say yes.
  If the string is "some", say yes.
  Say no.
  
  
To decide if an string is the start of any variable:
  If the string is "the", say yes.
  Say no.
  
  
To decide if an term is empty:
  If the term's variable is not nil, say no.
  If the term's phrase is not blank, say no.
  Say yes.
  
  
To decide if an type can be reduced to an string using the base name:
  If the type is nil, say no.
  If the type's name is the string, say yes.
  If the type's cooking flag is set, say no.
  Set the type's cooking flag.
  Find an base type given the type's base name and the type index.
  If the base type is nil, clear the type's cooking flag; say no.
  If the base type can be reduced to the string using the base name, clear the type's cooking flag; say yes.
  Clear the type's cooking flag.
  Say no.
  
  
To decide if an type can be reduced to an type name:
  If the type is nil, say no.
  Privatize the type.
  Loop.
    If the type is nil, say no.
    If the type's name is the type name, say yes.
    If the type's base type is the type, say no.
    Put the type's base type into the type.
  Repeat.
  
  
To decide if an type is any built-in type:
  If the type is nil, say no.
  If the type is the type's base type, say yes.
  Say no.
  
  
To decide if an type is value pushable:
  If the type is nil, say no.
  If the type is nil, say no.
  If the type's length is 4, say yes.
  If the type's length is 2, say yes.
  If the type's length is 1, say yes.
  Say no.
  
  
To decide if an type should be finalized:
  If the type is nil, say no.
  If the type can be reduced to "substring", say no.
  If the type can be reduced to "string", say yes.
  If the type's fields should be finalized, say yes.
  Say no.
  
  
To decide if an type should be forgotten:
  If the type is nil, say no.
  If the type's name is "thing", say no.
  If the type's name is "things", say no.
  If the type can be reduced to "things", say yes.
  If the type can not be reduced to "pointer", say no.
  If the type's target type is nil, say no.
  If the type's target type cannot be reduced to "pointer", say yes.
  If the type's target type should not be forgotten, say no.
  Say yes.
  
  
To decide if an variable is duplicated in some variables:
  Get another variable from the variables.
  If the other variable is nil, say no.
  If the other variable's name is blank, repeat.
  If the other variable is the variable, repeat.
  If the other variable's name is the variable's name, say yes.
  Repeat.
  
  
To decide if an item looks reamish:
  Load the item's path into an buffer.
  If the buffer starts with "ream cal", say yes.
  Say no.
  
  
To decide if any of some monikettes are negative words:
    Get an monikette from the monikettes.
    If the monikette is nil, say no.
    If the monikette's string is any negative word, say yes.
  Repeat.
  
  
To decide if some fields should be finalized:
    Get an field from the fields.
    If the field is nil, say no.
    If the field's type should be finalized, say yes.
  Repeat.
  
  
