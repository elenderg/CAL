To move an rider (code rules - comment):
  Bump the rider.
  If the rider's source is blank, exit.
  If the rider's source's first's target is not the return byte, repeat.
  
  
To move an rider (code rules - glom):
  Bump the rider.
  If the rider's source is blank, exit.
  If the rider is on any possessive, exit.
  If the rider's source's first's target is any glom byte, repeat.
  
  
To move an rider (code rules - mark):
  Bump the rider.
  
  
To move an rider (code rules - noise):
  Bump the rider.
  If the rider's source is blank, exit.
  If the rider's source's first's target is noise, repeat.
  
  
To move an rider (code rules - possessive):
  Bump the rider.
  If the rider's source is blank, exit.
  If the rider's source starts with "s", bump the rider.
  
  
To move an rider (code rules - qualifier):
    If the rider's source is blank, exit.
    If the rider's source's first's target is the return byte, break.
    If the rider's source's first's target is the left-paren byte, add 1 to an count.
    If the rider's source's first's target is the right-paren byte, subtract 1 from the count.
    Bump the rider.
    If the count is 0, break.
  Repeat.
  
  
To move an rider (code rules - remark):
    If the rider's source is blank, exit.
    If the rider's source's first's target is the return byte, break.
    If the rider's source's first's target is the left-bracket byte, add 1 to an count.
    If the rider's source's first's target is the right-bracket byte, subtract 1 from the count.
    Bump the rider.
    If the count is 0, break.
  Repeat.  
  
  
To move an rider (code rules - string):
    Bump the rider.
    If the rider's source is blank, exit.
    If the rider's source's first's target is the return byte, exit.
    If the rider is on any nested double-quote, bump the rider; repeat.
    If the rider's source's first's target is the double-quote byte, bump the rider; exit.
  Repeat.
  
  
To move an rider (code rules - symbol):
  Bump the rider.
  
  
To move an rider (code rules):
  Position the rider's token on the rider's source.
  If the rider's source is blank, exit.
  If the rider's source's first's target is noise, move the rider (code rules - noise); exit.
  If the rider's source's first's target is the backslash byte, move the rider (code rules - comment); exit.
  If the rider's source's first's target is the left-bracket byte, move the rider (code rules - remark); exit.
  If the rider's source's first's target is the double-quote byte, move the rider (code rules - string); exit.
  If the rider's source's first's target is the left-paren byte, move the rider (code rules - qualifier); exit.
  If the rider's source's first's target is any mark, move the rider (code rules - mark); exit.
  If the rider is on any possessive, move the rider (code rules - possessive); exit.
  Move the rider (code rules - glom).
  
  
To move an rider (compiler rules):
    If the compiler's abort flag is set, clear the rider's token; exit.
    Move the rider returning an error string (code rules).
    If the error string is not blank, abort with the error string and the rider's token's first; exit.
    If the rider's token is blank, exit.
  If the rider's token's first's target is noise, repeat.
  If the rider's token's first's target is the backslash byte, repeat.
  If the rider's token's first's target is the left-bracket byte, repeat.
  
  
To move an rider returning an error string (code rules - validate qualifier):
  If the rider's token's length is less than 2, put "Qualifiers need to end with ')'." into the error string; exit.
  If the rider's token's last's target is not the right-paren byte, put "Qualifiers need to end with ')'." into the error string; exit.
  
  
To move an rider returning an error string (code rules - validate remark):
  If the rider's token's length is less than 2, put "Remarks need to end with ']'." into the error string; exit.
  If the rider's token's last's target is not the right-bracket byte, put "Remarks need to end with ']'." into the error string; exit.
  
  
To move an rider returning an error string (code rules - validate string):
  If the rider's token's length is less than 2, put "Strings need to end with '""'." into the error string; exit.
  If the rider's token's last's target is not the double-quote byte, put "Strings need to end with '""'." into the error string; exit.
  
  
To move an rider returning an error string (code rules):
  Clear the error string.
  Move the rider (code rules).
  If the rider's token is blank, exit.
  If the rider's token's first's target is the left-bracket byte, move the rider returning the error string (code rules - validate remark); exit.
  If the rider's token's first's target is the double-quote byte, move the rider returning the error string (code rules - validate string); exit.
  If the rider's token's first's target is the left-paren byte, move the rider returning the error string (code rules - validate qualifier); exit.
  
  
