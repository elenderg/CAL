To copy an field into another field:
  If the field is nil, void the other field; exit.
  Allocate memory for the other field.
  Put the field's locus into the other field's locus.
  Put the field's name into the other field's name.
  Put the field's nickname into the other field's nickname.
  Put the field's type name into the other field's type name.
  Put the field's type into the other field's type.
  Put the field's count into the other field's count.
  Put the field's redefinition target name into the other field's redefinition target name.
  Put the field's reference flag into the other field's reference flag.
  Put the field's offset into the other field's offset.
  
  
To copy an monikette into another monikette:
  If the monikette is nil, void the other monikette; exit.
  Allocate memory for the other monikette.
  Put the monikette's string into the other monikette's string.
  Put the monikette's type into the other monikette's type.
  Put the monikette's variable into the other monikette's variable.
  \ don't copy substring
  Put the monikette's current type into the other monikette's current type.
  
  
To copy some fields into some other fields (data fields only):
  If the fields' first is nil, exit.
  If the fields' first's next is nil, exit.
  Put the fields' first's next's next into an field.
  Loop.
    If the field is nil, exit.
    Copy the field into another field.
    Append the other field to the other fields.
    Get the field from the fields.
  Repeat.
  
  
To copy some fields into some other fields:
    Get an field from the fields.
    If the field is nil, exit.
    Copy the field into another field.
    Append the other field to the other fields.
  Repeat.
  
  
To copy some monikettes into some other monikettes:
  Destroy the other monikettes.
  Loop.
  Get an monikette from the monikettes.
  If the monikette is nil, exit.
  Copy the monikette into another monikette.
  Append the other monikette to the other monikettes.
  Repeat.
  
  
